---
import FrontendQuizLayout from '@/layouts/FrontendQuizLayout.astro'
import IconLabel from '@/components/play/frontend-quiz/IconLabel.astro'
import SubtleText from '@/components/play/frontend-quiz/SubtleText.astro'
import Stepper from '@/components/play/frontend-quiz/Stepper.astro'
import {subjects} from '../../_subjects'
import SubThemeToggle from '@/components/play/frontend-quiz/SubThemeToggle.svelte'
import AnswersForm from '@/components/play/frontend-quiz/AnswersForm.svelte'

export const prerender = false

const {slug, questionNumber: questionNumberString} = Astro.params
const subject = subjects.find((s) => s.slug === slug)
if (!subject || !questionNumberString) return Astro.redirect('/404')

const questionNumber = parseInt(questionNumberString)
const currentQuestion = subject.questions[questionNumber - 1]
if (!currentQuestion) return Astro.redirect('/404')

type Answer = {
	selected: number
	actual: number
}
let answers: Answer[] = []
const cookieKey = `frontend-quiz:${slug}`
if (Astro.cookies.has(cookieKey)) {
	const answersCookie = Astro.cookies.get(cookieKey)
	answers = answersCookie?.json()
}

const {name, icon: Icon, hsl} = subject

const totalQuestions = subject.questions.length

const meta = {
	title: `${name} | Frontend Quiz`,
	description: `Test your ${name} skills with these multiple choice questions!`,
}

if (Astro.request.method === 'POST') {
	try {
		const data = await Astro.request.formData()
		const answerIndex = data.get('answer')
		if (typeof answerIndex !== 'string') throw new Error('No answer provided')
		const correctAnswerIndex = currentQuestion.options.findIndex(
			(option) => option === currentQuestion.answer,
		)

		const result = {selected: parseInt(answerIndex), actual: correctAnswerIndex}
		answers[questionNumber - 1] = result
		const ONE_YEAR_IN_SECONDS = 60 * 60 * 24 * 365
		Astro.cookies.set(cookieKey, JSON.stringify(answers), {
			maxAge: ONE_YEAR_IN_SECONDS,
			path: '/',
			sameSite: true,
			httpOnly: true,
		})

		// return new Response(JSON.stringify(result), {status: 200})
	} catch (error) {
		if (error instanceof Error) {
			console.error(error.message)
		}
	}
}
---

<FrontendQuizLayout meta={meta}>
	<div class="mb-10 flex items-center justify-between">
		<h1
			class="flex items-center gap-4 text-lg font-medium md:gap-8 md:text-2xl"
			transition:name={`subject-${slug}`}
		>
			<IconLabel hsl={hsl}>
				<Icon />
			</IconLabel>
			{name}
		</h1>

		<SubThemeToggle client:idle />
	</div>
	<div class="grid gap-10 md:gap-16 lg:grid-cols-2 lg:pt-[10vh]">
		<section>
			<div class="mb-6 flex flex-col gap-3 md:mb-10 md:gap-7">
				<SubtleText>
					Question {questionNumber} from {totalQuestions}
				</SubtleText>
				<p class="text-xl font-medium md:text-3xl">
					{currentQuestion.question}
				</p>
			</div>
			<Stepper currentStep={questionNumber} totalSteps={totalQuestions} />
		</section>

		<AnswersForm
			question={currentQuestion.question}
			questionNumber={questionNumber}
			options={currentQuestion.options}
			answer={answers[questionNumber - 1] ?? null}
			areThereMoreQuestions={questionNumber < totalQuestions}
			slug={slug}
			client:load
		/>
	</div>
</FrontendQuizLayout>
