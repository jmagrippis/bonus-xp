---
import '@fontsource-variable/raleway'
import './globals.css'
import Header from '@/components/Header/Header.astro'
import Footer from '@/components/Footer.astro'

type Meta = {
	title?: string
	description?: string
}

const defaultMeta: Meta = {
	title: 'Bonus XP üßô‚Äç‚ôÄÔ∏è',
	description: 'Explore, adventure, and learn how to code the fun way!',
}

type Props = {
	meta?: Meta
}

const {meta} = Astro.props

const title = meta?.title ? `${meta.title} üßô‚Äç‚ôÄÔ∏è Bonus XP` : defaultMeta.title
const description = meta?.description ?? defaultMeta.description
---

<!doctype html>
<script is:inline>
	// default to dark mode, because **I** like it more :-)
	const defaultTheme = 'dark'
	const getTheme = () => {
		if (typeof localStorage !== 'undefined') {
			return localStorage.getItem('theme') || defaultTheme
		}
		return defaultTheme
	}

	const theme = getTheme()
	document.documentElement.dataset.theme = theme

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const nextTheme = document.documentElement.dataset.theme
			if (nextTheme) {
				localStorage.setItem('theme', nextTheme)
			}
		})
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ['data-theme'],
		})
	}

	const toggleTheme = () => {
		const nextTheme =
			document.documentElement.dataset.theme === 'dark' ? 'light' : 'dark'
		document.documentElement.dataset.theme = nextTheme
	}

	window.toggleTheme = toggleTheme
</script>

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<title>{title}</title>
		<meta name="description" content={description} />

		<!-- OpenGraph Meta -->
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<meta property="og:site_name" content="Bonus XP" />
		<meta property="og:url" content={Astro.url.origin + Astro.url.pathname} />
	</head>
	<body>
		<Header />
		<main class="content-grid">
			<slot />
		</main>
		<Footer />
	</body>
</html>
